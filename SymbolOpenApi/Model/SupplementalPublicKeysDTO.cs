/*
 * Catapult REST Endpoints
 *
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SymbolOpenApi.Client.OpenAPIDateConverter;

namespace SymbolOpenApi.Model
{
    /// <summary>
    /// SupplementalPublicKeysDTO
    /// </summary>
    [DataContract]
    public partial class SupplementalPublicKeysDTO :  IEquatable<SupplementalPublicKeysDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SupplementalPublicKeysDTO" /> class.
        /// </summary>
        /// <param name="linked">linked.</param>
        /// <param name="node">node.</param>
        /// <param name="vrf">vrf.</param>
        /// <param name="voting">voting.</param>
        public SupplementalPublicKeysDTO(AccountLinkPublicKeyDTO linked = default(AccountLinkPublicKeyDTO), AccountLinkPublicKeyDTO node = default(AccountLinkPublicKeyDTO), AccountLinkPublicKeyDTO vrf = default(AccountLinkPublicKeyDTO), AccountLinkVotingKeysDTO voting = default(AccountLinkVotingKeysDTO))
        {
            this.Linked = linked;
            this.Node = node;
            this.Vrf = vrf;
            this.Voting = voting;
        }

        /// <summary>
        /// Gets or Sets Linked
        /// </summary>
        [DataMember(Name="linked", EmitDefaultValue=false)]
        public AccountLinkPublicKeyDTO Linked { get; set; }

        /// <summary>
        /// Gets or Sets Node
        /// </summary>
        [DataMember(Name="node", EmitDefaultValue=false)]
        public AccountLinkPublicKeyDTO Node { get; set; }

        /// <summary>
        /// Gets or Sets Vrf
        /// </summary>
        [DataMember(Name="vrf", EmitDefaultValue=false)]
        public AccountLinkPublicKeyDTO Vrf { get; set; }

        /// <summary>
        /// Gets or Sets Voting
        /// </summary>
        [DataMember(Name="voting", EmitDefaultValue=false)]
        public AccountLinkVotingKeysDTO Voting { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SupplementalPublicKeysDTO {\n");
            sb.Append("  Linked: ").Append(Linked).Append("\n");
            sb.Append("  Node: ").Append(Node).Append("\n");
            sb.Append("  Vrf: ").Append(Vrf).Append("\n");
            sb.Append("  Voting: ").Append(Voting).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SupplementalPublicKeysDTO);
        }

        /// <summary>
        /// Returns true if SupplementalPublicKeysDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of SupplementalPublicKeysDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SupplementalPublicKeysDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Linked == input.Linked ||
                    (this.Linked != null &&
                    this.Linked.Equals(input.Linked))
                ) && 
                (
                    this.Node == input.Node ||
                    (this.Node != null &&
                    this.Node.Equals(input.Node))
                ) && 
                (
                    this.Vrf == input.Vrf ||
                    (this.Vrf != null &&
                    this.Vrf.Equals(input.Vrf))
                ) && 
                (
                    this.Voting == input.Voting ||
                    (this.Voting != null &&
                    this.Voting.Equals(input.Voting))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Linked != null)
                    hashCode = hashCode * 59 + this.Linked.GetHashCode();
                if (this.Node != null)
                    hashCode = hashCode * 59 + this.Node.GetHashCode();
                if (this.Vrf != null)
                    hashCode = hashCode * 59 + this.Vrf.GetHashCode();
                if (this.Voting != null)
                    hashCode = hashCode * 59 + this.Voting.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
