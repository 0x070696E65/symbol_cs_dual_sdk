
using System.Collections.Generic;
using NUnit.Framework;
using CatSdk.Facade;
using CatSdk.Nem.Factory;
using CatSdk.Nem;
using CatSdk.Utils;

namespace Test.Nem{
public class TransactionNonParserTest
{
    private readonly NemFacade Facade = new (Network.TestNet);     
	[Test]
	public void AccountKeyLinkTransactionV1_account_key_link_single_1(){
		var payload = "0108000001000098701EE7712000000009DF26A84FD347A711C50CEF23C5094F33E4B52435365EA460A894B7785F248340000000F9197D11A025101D4396A3475EEBD790DC62DC63859C4FEA5DA57BE16D7BF3771AB705D063E05356AD3FBFA344425CAAB47B0831AEBB2D65A08C0C014B110C62E0FEEEEFFEEEEFFE0000000001000000200000006269E26026CECEFE640C3E0DE050CB9B3CFD279A0713CF00E16EDEF5D6C10EB9";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "account_key_link_transaction_v1"},
			{"LinkAction", LinkAction.LINK},
			{"RemotePublicKey", new PublicKey(Converter.HexToBytes("6269E26026CECEFE640C3E0DE050CB9B3CFD279A0713CF00E16EDEF5D6C10EB9"))},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("09DF26A84FD347A711C50CEF23C5094F33E4B52435365EA460A894B7785F2483"))},
			{"Signature", new Signature(Converter.HexToBytes("F9197D11A025101D4396A3475EEBD790DC62DC63859C4FEA5DA57BE16D7BF3771AB705D063E05356AD3FBFA344425CAAB47B0831AEBB2D65A08C0C014B110C62"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void AccountKeyLinkTransactionV1_account_key_link_single_2(){
		var payload = "0108000001000098701EE771200000008D8B630E0A3086A427DC187452878840ADA021A6D8CACFCF023B7CD172F1B1AB400000007E87B96BC9C9481B675BF1C0DB8618E4F5AFE5E95EEF7FB37231C252BA76534A1EE392CC2210350F35E7096A43003049ADC71F48556621896014227BC1DDF54FE0FEEEEFFEEEEFFE000000000200000020000000C3D4EAEB517BDDF22F21A2F7B61194D50666EDEBFE81B9118DB59ABE1D6E98E5";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "account_key_link_transaction_v1"},
			{"LinkAction", LinkAction.UNLINK},
			{"RemotePublicKey", new PublicKey(Converter.HexToBytes("C3D4EAEB517BDDF22F21A2F7B61194D50666EDEBFE81B9118DB59ABE1D6E98E5"))},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("8D8B630E0A3086A427DC187452878840ADA021A6D8CACFCF023B7CD172F1B1AB"))},
			{"Signature", new Signature(Converter.HexToBytes("7E87B96BC9C9481B675BF1C0DB8618E4F5AFE5E95EEF7FB37231C252BA76534A1EE392CC2210350F35E7096A43003049ADC71F48556621896014227BC1DDF54F"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void AccountKeyLinkTransactionV1_account_key_link_aggregate_1(){
		var payload = "0410000001000098701EE771200000006C3AD86C294BCC0244EF2F68D47BA6426FF48C42CB5FF1978139E0256142BACC400000008FF91B4D9027D09053E39059C271A3C633B6B740D0722172FB58838A1DDBE2B472D9537151EA989AF5BF183BD1DE42CC9117F466DAC0A4F3CA5C8424A7D24938E0FEEEEFFEEEEFFE00000000640000000108000001000098701EE771200000006C3AD86C294BCC0244EF2F68D47BA6426FF48C42CB5FF1978139E0256142BACCE0FEEEEFFEEEEFFE0000000001000000200000006269E26026CECEFE640C3E0DE050CB9B3CFD279A0713CF00E16EDEF5D6C10EB900000000";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "account_key_link_transaction_v1"},
						{"LinkAction", LinkAction.LINK},
						{"RemotePublicKey", new PublicKey(Converter.HexToBytes("6269E26026CECEFE640C3E0DE050CB9B3CFD279A0713CF00E16EDEF5D6C10EB9"))},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("6C3AD86C294BCC0244EF2F68D47BA6426FF48C42CB5FF1978139E0256142BACC"))},
						{"Signature", new Signature(Converter.HexToBytes("8FF91B4D9027D09053E39059C271A3C633B6B740D0722172FB58838A1DDBE2B472D9537151EA989AF5BF183BD1DE42CC9117F466DAC0A4F3CA5C8424A7D24938"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("6C3AD86C294BCC0244EF2F68D47BA6426FF48C42CB5FF1978139E0256142BACC"))},
			{"Signature", new Signature(Converter.HexToBytes("8FF91B4D9027D09053E39059C271A3C633B6B740D0722172FB58838A1DDBE2B472D9537151EA989AF5BF183BD1DE42CC9117F466DAC0A4F3CA5C8424A7D24938"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<SizePrefixedCosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void AccountKeyLinkTransactionV1_account_key_link_aggregate_2(){
		var payload = "0410000001000098701EE77120000000D571DBBC3B5948FBC7239B34964484AA478046F8BB09B3F3805F853935125E5D40000000EBB7CEC3AF0608CA6BB21826B2E5AE07BE95E49B20C98B0DB33D2DB36B09174A0D54C98855D68999DFBE81F893B6F5D496F9233730BA56B7FA8BDD7DE2DAA566E0FEEEEFFEEEEFFE00000000640000000108000001000098701EE77120000000D571DBBC3B5948FBC7239B34964484AA478046F8BB09B3F3805F853935125E5DE0FEEEEFFEEEEFFE000000000200000020000000C3D4EAEB517BDDF22F21A2F7B61194D50666EDEBFE81B9118DB59ABE1D6E98E500000000";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "account_key_link_transaction_v1"},
						{"LinkAction", LinkAction.UNLINK},
						{"RemotePublicKey", new PublicKey(Converter.HexToBytes("C3D4EAEB517BDDF22F21A2F7B61194D50666EDEBFE81B9118DB59ABE1D6E98E5"))},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("D571DBBC3B5948FBC7239B34964484AA478046F8BB09B3F3805F853935125E5D"))},
						{"Signature", new Signature(Converter.HexToBytes("EBB7CEC3AF0608CA6BB21826B2E5AE07BE95E49B20C98B0DB33D2DB36B09174A0D54C98855D68999DFBE81F893B6F5D496F9233730BA56B7FA8BDD7DE2DAA566"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("D571DBBC3B5948FBC7239B34964484AA478046F8BB09B3F3805F853935125E5D"))},
			{"Signature", new Signature(Converter.HexToBytes("EBB7CEC3AF0608CA6BB21826B2E5AE07BE95E49B20C98B0DB33D2DB36B09174A0D54C98855D68999DFBE81F893B6F5D496F9233730BA56B7FA8BDD7DE2DAA566"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<SizePrefixedCosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void CosignatureV1_cosignature_single_1(){
		var payload = "0210000001000098701EE771200000008F7425259F3BCD10A45BCBC43E449178AC08D3247F1289C27899BB96EC132D0940000000762B74D6FE0F35F5441404B6D10A9E8C1523160804B24A4566996C933771B2E9317A2244F618C157F3F3AC4DE4348C8970F8719CC68165E849F4C78617D0D38AE0FEEEEFFEEEEFFE000000002400000020000000F51C1E0B91C34AB3E54B8B6FD2BA6209254D47E0AF0C74C90BB2B99100B94829280000005442543747414351514C59585546425351435548585857514D535244414A504143544E4A37323457";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "cosignature_v1"},
			{"MultisigTransactionHash", new Hash256(Converter.HexToBytes("F51C1E0B91C34AB3E54B8B6FD2BA6209254D47E0AF0C74C90BB2B99100B94829"))},
			{"MultisigAccountAddress", new Address(Converter.Utf8ToBytes("TBT7GACQQLYXUFBSQCUHXXWQMSRDAJPACTNJ724W"))},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("8F7425259F3BCD10A45BCBC43E449178AC08D3247F1289C27899BB96EC132D09"))},
			{"Signature", new Signature(Converter.HexToBytes("762B74D6FE0F35F5441404B6D10A9E8C1523160804B24A4566996C933771B2E9317A2244F618C157F3F3AC4DE4348C8970F8719CC68165E849F4C78617D0D38A"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MosaicDefinitionTransactionV1_mosaic_definition_single_1(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "mosaic_definition_transaction_v1"},
			{"MosaicDefinition", new MosaicDefinition(){
				OwnerPublicKey = new PublicKey(Converter.HexToBytes("875BD953CB8EC0BDEAA01552E390B5E59DEAAD44D81BD7DEAF0C332F99AEECE8")),
				Id = new MosaicId {
				Name = Converter.HexToBytes("616C6963652773206769667420766F756368657273"),
				NamespaceId = {Name = Converter.HexToBytes("616C6963652E766F756368657273")}},
				Description = Converter.HexToBytes("70726563696F757320766F756368657273"),
				Properties = new SizePrefixedMosaicProperty[] {
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("64697669736962696C697479"),
							Value = Converter.HexToBytes("33")}
						},
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("696E697469616C537570706C79"),
							Value = Converter.HexToBytes("30")}
						},
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("737570706C794D757461626C65"),
							Value = Converter.HexToBytes("66616C7365")}
						},
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("7472616E7366657261626C65"),
							Value = Converter.HexToBytes("74727565")}
						},
					},
					}
			},
			{"RentalFeeSink", new Address(Converter.Utf8ToBytes("TDX5YX2NJUSWXEKJ4UQN3WXUY3SCCAGWHHFJ3B5J"))},
			{"RentalFee", new Amount(678000000)},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("70F08E77C31D9816C0A63009137A9BADBE5F42431EFBC3994822A25CED9D8282"))},
			{"Signature", new Signature(Converter.HexToBytes("5D3116D285D4ED8883DBBBC8E59FED08A888DAB21C6E4B918434BE2B3AF1105EE1B94EAA9C4BB54428F4A71C711964F00848B9A9E00D8F55670991AADC16119F"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MosaicDefinitionTransactionV1_mosaic_definition_single_2(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "mosaic_definition_transaction_v1"},
			{"MosaicDefinition", new MosaicDefinition(){
				OwnerPublicKey = new PublicKey(Converter.HexToBytes("F53B19CB1CAB394E22E3DDFA6D9B42DA87F37EB517EFA214433071E5619F898D")),
				Id = new MosaicId {
				Name = Converter.HexToBytes("616C6963652773206769667420766F756368657273"),
				NamespaceId = {Name = Converter.HexToBytes("616C6963652E766F756368657273")}},
				Description = Converter.HexToBytes("70726563696F757320766F756368657273"),
				Properties = new SizePrefixedMosaicProperty[] {
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("64697669736962696C697479"),
							Value = Converter.HexToBytes("33")}
						},
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("696E697469616C537570706C79"),
							Value = Converter.HexToBytes("333435363738")}
						},
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("737570706C794D757461626C65"),
							Value = Converter.HexToBytes("66616C7365")}
						},
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("7472616E7366657261626C65"),
							Value = Converter.HexToBytes("74727565")}
						},
					},
					}
			},
			{"RentalFeeSink", new Address(Converter.Utf8ToBytes("TCO5WSTHXII62V3MYWKBD7GOMCDRX35TFOZEX3BD"))},
			{"RentalFee", new Amount(678000000)},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("FA59F3C0267DA5F9A11BBC9714B19402172CD1834F42CC4D2699301437B6BF0D"))},
			{"Signature", new Signature(Converter.HexToBytes("D3B6BEF55F6D99281079B8A138EECE9A4CACC052BC3E84D83D72C3FCF0CFA85DEA390B8FCD50F1A6A6E196DDDED52CB92FC3C216C6B5F06F96E89B23FA62B4BE"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MosaicDefinitionTransactionV1_mosaic_definition_single_3(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "mosaic_definition_transaction_v1"},
			{"MosaicDefinition", new MosaicDefinition(){
				OwnerPublicKey = new PublicKey(Converter.HexToBytes("69AF8763FEECEF35E0AEF44A202EFAC4936532C202784CF85CBCD16BFC45F119")),
				Id = new MosaicId {
				Name = Converter.HexToBytes("746572726F7269736D"),
				NamespaceId = {Name = Converter.HexToBytes("73746174652E73706F6E736F726564")}},
				Description = Converter.HexToBytes("70726563696F757320766F756368657273"),
				Properties = new SizePrefixedMosaicProperty[] {
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("64697669736962696C697479"),
							Value = Converter.HexToBytes("32")}
						},
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("696E697469616C537570706C79"),
							Value = Converter.HexToBytes("31303030")}
						},
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("737570706C794D757461626C65"),
							Value = Converter.HexToBytes("74727565")}
						},
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("7472616E7366657261626C65"),
							Value = Converter.HexToBytes("74727565")}
						},
					},
					}
			},
			{"RentalFeeSink", new Address(Converter.Utf8ToBytes("TARPSQFPJL6A2ORAQJ46GOZUDPNYVQJKGVT2NMG7"))},
			{"RentalFee", new Amount(678000000)},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("1138798330AB1EDF113867A0A03285FBFC8D433F7F688B41B33D01C7939086D5"))},
			{"Signature", new Signature(Converter.HexToBytes("3712BC4F3932457AD1A7CC967CC45C3D5F04A52F6B802AEC7D377E504432F1DA40DD1EDAFE9F5899BD04DFBFB1324B198CCEE3344883DEA75DCCE2D1778B6529"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MosaicDefinitionTransactionV1_mosaic_definition_single_4(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "mosaic_definition_transaction_v1"},
			{"MosaicDefinition", new MosaicDefinition(){
				OwnerPublicKey = new PublicKey(Converter.HexToBytes("B5B93DDE2D05D21D0A14E6F60DB33E983B88A99FB203916D408AF5749A396960")),
				Id = new MosaicId {
				Name = Converter.HexToBytes("656C656374726F6E6963"),
				NamespaceId = {Name = Converter.HexToBytes("6D6173732E7375727665696C6C616E6365")}},
				Description = Converter.HexToBytes("70726563696F757320766F756368657273"),
				Properties = new SizePrefixedMosaicProperty[] {
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("64697669736962696C697479"),
							Value = Converter.HexToBytes("32")}
						},
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("696E697469616C537570706C79"),
							Value = Converter.HexToBytes("31303030")}
						},
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("737570706C794D757461626C65"),
							Value = Converter.HexToBytes("74727565")}
						},
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("7472616E7366657261626C65"),
							Value = Converter.HexToBytes("74727565")}
						},
					},
				Levy = new MosaicLevy(){
					TransferFeeType = MosaicTransferFeeType.ABSOLUTE,
					RecipientAddress = new Address(Converter.Utf8ToBytes("TCUTCNM64Y6Q4VB4OTEHBQT2ZKUY3CUYRVHCTIZ3")),
					MosaicId = {
						NamespaceId = new NamespaceId {Name = Converter.HexToBytes("72657074696C69616E73"),},
						Name = Converter.HexToBytes("756E69746564"),},
					Fee = new Amount(58132134)},
					}
			},
			{"RentalFeeSink", new Address(Converter.Utf8ToBytes("TD3M6P3CENCDVIC2GRJLQPLQXBX6MOB6FBQZOXM2"))},
			{"RentalFee", new Amount(678000000)},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("FBFB8B242D82AC8C8E27248F5C89128B60259A483C849035A9DD0ACBB9C62680"))},
			{"Signature", new Signature(Converter.HexToBytes("4C832978D452E0BF0225B31F50947D8216528267B433D97652CC26DBCA9BFBB7BA1E95177319A0BAA0E8EC2AB0E9D9E835491ECCF5DB80C1AC25CE0B3A3EE05D"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MosaicDefinitionTransactionV1_mosaic_definition_single_5(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "mosaic_definition_transaction_v1"},
			{"MosaicDefinition", new MosaicDefinition(){
				OwnerPublicKey = new PublicKey(Converter.HexToBytes("D7F44870D24E7626DB24591452A2F7ECF6650B0D41D3BCB4FB4BA11B063B80AC")),
				Id = new MosaicId {
				Name = Converter.HexToBytes("656C656374726F6E6963"),
				NamespaceId = {Name = Converter.HexToBytes("6D6173732E7375727665696C6C616E6365")}},
				Description = Converter.HexToBytes("70726563696F757320766F756368657273"),
				Properties = new SizePrefixedMosaicProperty[] {
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("64697669736962696C697479"),
							Value = Converter.HexToBytes("32")}
						},
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("696E697469616C537570706C79"),
							Value = Converter.HexToBytes("31303030")}
						},
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("737570706C794D757461626C65"),
							Value = Converter.HexToBytes("74727565")}
						},
					new (){
						Property = new MosaicProperty {
							Name = Converter.HexToBytes("7472616E7366657261626C65"),
							Value = Converter.HexToBytes("74727565")}
						},
					},
				Levy = new MosaicLevy(){
					TransferFeeType = MosaicTransferFeeType.PERCENTILE,
					RecipientAddress = new Address(Converter.Utf8ToBytes("TDAQGCFP4TR2U33WBXJEDUHH6OWV3T4YXWHSH46A")),
					MosaicId = {
						NamespaceId = new NamespaceId {Name = Converter.HexToBytes("6C697A617264"),},
						Name = Converter.HexToBytes("70656F706C65"),},
					Fee = new Amount(112358)},
					}
			},
			{"RentalFeeSink", new Address(Converter.Utf8ToBytes("TA2ZI764OYY233XIKTETFPGCC2HKORQSHTCUGCHX"))},
			{"RentalFee", new Amount(678000000)},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("D3469A1797BF66D59C975A81050C2EF1C14A8AA4AE7146471B8F68B5968705DF"))},
			{"Signature", new Signature(Converter.HexToBytes("DE82DD7A31DA350ECCD680722A9B4785001F23FDCC0149668E324DC81690D5DE231D568A170A9DB3AA9FF2EA3FF4B3DCD3CC37FC2E026EFFB26FFA681E09B94E"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MosaicDefinitionTransactionV1_mosaic_definition_aggregate_1(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "mosaic_definition_transaction_v1"},
						{"MosaicDefinition", new MosaicDefinition(){
							OwnerPublicKey = new PublicKey(Converter.HexToBytes("875BD953CB8EC0BDEAA01552E390B5E59DEAAD44D81BD7DEAF0C332F99AEECE8")),
							Id = new MosaicId {
							Name = Converter.HexToBytes("616C6963652773206769667420766F756368657273"),
							NamespaceId = {Name = Converter.HexToBytes("616C6963652E766F756368657273")}},
							Description = Converter.HexToBytes("70726563696F757320766F756368657273"),
							Properties = new SizePrefixedMosaicProperty[] {
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("64697669736962696C697479"),
										Value = Converter.HexToBytes("33")}
									},
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("696E697469616C537570706C79"),
										Value = Converter.HexToBytes("30")}
									},
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("737570706C794D757461626C65"),
										Value = Converter.HexToBytes("66616C7365")}
									},
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("7472616E7366657261626C65"),
										Value = Converter.HexToBytes("74727565")}
									},
								},
								}
						},
						{"RentalFeeSink", new Address(Converter.Utf8ToBytes("TDX5YX2NJUSWXEKJ4UQN3WXUY3SCCAGWHHFJ3B5J"))},
						{"RentalFee", new Amount(678000000)},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("9408A21018F5FA6205D0A5D1A99DC3BF7295D686460569F6FC7BCD9D392F2E9E"))},
						{"Signature", new Signature(Converter.HexToBytes("32D1342734620E653DE0D6987C77EBD99D8B9818E9BF20BB7E042BF96FD2A288CB16DA71B3D60AB7627DDD5C3BCEA5901DACBDAF42B55184C51D1F19E04C62AD"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("9408A21018F5FA6205D0A5D1A99DC3BF7295D686460569F6FC7BCD9D392F2E9E"))},
			{"Signature", new Signature(Converter.HexToBytes("32D1342734620E653DE0D6987C77EBD99D8B9818E9BF20BB7E042BF96FD2A288CB16DA71B3D60AB7627DDD5C3BCEA5901DACBDAF42B55184C51D1F19E04C62AD"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MosaicDefinitionTransactionV1_mosaic_definition_aggregate_2(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "mosaic_definition_transaction_v1"},
						{"MosaicDefinition", new MosaicDefinition(){
							OwnerPublicKey = new PublicKey(Converter.HexToBytes("F53B19CB1CAB394E22E3DDFA6D9B42DA87F37EB517EFA214433071E5619F898D")),
							Id = new MosaicId {
							Name = Converter.HexToBytes("616C6963652773206769667420766F756368657273"),
							NamespaceId = {Name = Converter.HexToBytes("616C6963652E766F756368657273")}},
							Description = Converter.HexToBytes("70726563696F757320766F756368657273"),
							Properties = new SizePrefixedMosaicProperty[] {
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("64697669736962696C697479"),
										Value = Converter.HexToBytes("33")}
									},
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("696E697469616C537570706C79"),
										Value = Converter.HexToBytes("333435363738")}
									},
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("737570706C794D757461626C65"),
										Value = Converter.HexToBytes("66616C7365")}
									},
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("7472616E7366657261626C65"),
										Value = Converter.HexToBytes("74727565")}
									},
								},
								}
						},
						{"RentalFeeSink", new Address(Converter.Utf8ToBytes("TCO5WSTHXII62V3MYWKBD7GOMCDRX35TFOZEX3BD"))},
						{"RentalFee", new Amount(678000000)},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("D962535DE9E97E0CB8E878AA0B68B2D601D20D0BB2A46AE06C086FFED4342DFE"))},
						{"Signature", new Signature(Converter.HexToBytes("15C8937E60CE6D6EBFC8CD244B3C617E92E45E5C386C2DC7F05010039DF9B95D65529BD7646A7772390ED95828F65792399C78C53B00F349F142B6FBBC749BF8"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("D962535DE9E97E0CB8E878AA0B68B2D601D20D0BB2A46AE06C086FFED4342DFE"))},
			{"Signature", new Signature(Converter.HexToBytes("15C8937E60CE6D6EBFC8CD244B3C617E92E45E5C386C2DC7F05010039DF9B95D65529BD7646A7772390ED95828F65792399C78C53B00F349F142B6FBBC749BF8"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MosaicDefinitionTransactionV1_mosaic_definition_aggregate_3(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "mosaic_definition_transaction_v1"},
						{"MosaicDefinition", new MosaicDefinition(){
							OwnerPublicKey = new PublicKey(Converter.HexToBytes("69AF8763FEECEF35E0AEF44A202EFAC4936532C202784CF85CBCD16BFC45F119")),
							Id = new MosaicId {
							Name = Converter.HexToBytes("746572726F7269736D"),
							NamespaceId = {Name = Converter.HexToBytes("73746174652E73706F6E736F726564")}},
							Description = Converter.HexToBytes("70726563696F757320766F756368657273"),
							Properties = new SizePrefixedMosaicProperty[] {
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("64697669736962696C697479"),
										Value = Converter.HexToBytes("32")}
									},
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("696E697469616C537570706C79"),
										Value = Converter.HexToBytes("31303030")}
									},
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("737570706C794D757461626C65"),
										Value = Converter.HexToBytes("74727565")}
									},
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("7472616E7366657261626C65"),
										Value = Converter.HexToBytes("74727565")}
									},
								},
								}
						},
						{"RentalFeeSink", new Address(Converter.Utf8ToBytes("TARPSQFPJL6A2ORAQJ46GOZUDPNYVQJKGVT2NMG7"))},
						{"RentalFee", new Amount(678000000)},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("C1F2E14CBF743FE0A0FC27482BA97B4734B5F80BED8C6642B075EB421F9E2F81"))},
						{"Signature", new Signature(Converter.HexToBytes("4AEF7D973B45E8D60E030DDE3D6EEB6CDA947FA7663A87223B780A6E9F23C28FC78B196EFFF719894B4E09D223D77F2B87D7334C06F47D95762E284326D10ADC"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("C1F2E14CBF743FE0A0FC27482BA97B4734B5F80BED8C6642B075EB421F9E2F81"))},
			{"Signature", new Signature(Converter.HexToBytes("4AEF7D973B45E8D60E030DDE3D6EEB6CDA947FA7663A87223B780A6E9F23C28FC78B196EFFF719894B4E09D223D77F2B87D7334C06F47D95762E284326D10ADC"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MosaicDefinitionTransactionV1_mosaic_definition_aggregate_4(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "mosaic_definition_transaction_v1"},
						{"MosaicDefinition", new MosaicDefinition(){
							OwnerPublicKey = new PublicKey(Converter.HexToBytes("B5B93DDE2D05D21D0A14E6F60DB33E983B88A99FB203916D408AF5749A396960")),
							Id = new MosaicId {
							Name = Converter.HexToBytes("656C656374726F6E6963"),
							NamespaceId = {Name = Converter.HexToBytes("6D6173732E7375727665696C6C616E6365")}},
							Description = Converter.HexToBytes("70726563696F757320766F756368657273"),
							Properties = new SizePrefixedMosaicProperty[] {
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("64697669736962696C697479"),
										Value = Converter.HexToBytes("32")}
									},
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("696E697469616C537570706C79"),
										Value = Converter.HexToBytes("31303030")}
									},
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("737570706C794D757461626C65"),
										Value = Converter.HexToBytes("74727565")}
									},
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("7472616E7366657261626C65"),
										Value = Converter.HexToBytes("74727565")}
									},
								},
							Levy = new MosaicLevy(){
								TransferFeeType = MosaicTransferFeeType.ABSOLUTE,
								RecipientAddress = new Address(Converter.Utf8ToBytes("TCUTCNM64Y6Q4VB4OTEHBQT2ZKUY3CUYRVHCTIZ3")),
								MosaicId = {
									NamespaceId = new NamespaceId {Name = Converter.HexToBytes("72657074696C69616E73"),},
									Name = Converter.HexToBytes("756E69746564"),},
								Fee = new Amount(58132134)},
								}
						},
						{"RentalFeeSink", new Address(Converter.Utf8ToBytes("TD3M6P3CENCDVIC2GRJLQPLQXBX6MOB6FBQZOXM2"))},
						{"RentalFee", new Amount(678000000)},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("16F953A9744643AA682035CB7D54C33A5668B97D2D02E223CD0367FC6CB0BA15"))},
						{"Signature", new Signature(Converter.HexToBytes("B05C06CA83AD72C227D8303EC80013EBB0484CA1C4F3C3C5BEA9066C0CE39BD9D89F3AA05BB4FBA9BA4CB24C1ACD6119A5BC884C7D2DE41C815FFBD425F81A67"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("16F953A9744643AA682035CB7D54C33A5668B97D2D02E223CD0367FC6CB0BA15"))},
			{"Signature", new Signature(Converter.HexToBytes("B05C06CA83AD72C227D8303EC80013EBB0484CA1C4F3C3C5BEA9066C0CE39BD9D89F3AA05BB4FBA9BA4CB24C1ACD6119A5BC884C7D2DE41C815FFBD425F81A67"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MosaicDefinitionTransactionV1_mosaic_definition_aggregate_5(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "mosaic_definition_transaction_v1"},
						{"MosaicDefinition", new MosaicDefinition(){
							OwnerPublicKey = new PublicKey(Converter.HexToBytes("D7F44870D24E7626DB24591452A2F7ECF6650B0D41D3BCB4FB4BA11B063B80AC")),
							Id = new MosaicId {
							Name = Converter.HexToBytes("656C656374726F6E6963"),
							NamespaceId = {Name = Converter.HexToBytes("6D6173732E7375727665696C6C616E6365")}},
							Description = Converter.HexToBytes("70726563696F757320766F756368657273"),
							Properties = new SizePrefixedMosaicProperty[] {
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("64697669736962696C697479"),
										Value = Converter.HexToBytes("32")}
									},
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("696E697469616C537570706C79"),
										Value = Converter.HexToBytes("31303030")}
									},
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("737570706C794D757461626C65"),
										Value = Converter.HexToBytes("74727565")}
									},
								new (){
									Property = new MosaicProperty {
										Name = Converter.HexToBytes("7472616E7366657261626C65"),
										Value = Converter.HexToBytes("74727565")}
									},
								},
							Levy = new MosaicLevy(){
								TransferFeeType = MosaicTransferFeeType.PERCENTILE,
								RecipientAddress = new Address(Converter.Utf8ToBytes("TDAQGCFP4TR2U33WBXJEDUHH6OWV3T4YXWHSH46A")),
								MosaicId = {
									NamespaceId = new NamespaceId {Name = Converter.HexToBytes("6C697A617264"),},
									Name = Converter.HexToBytes("70656F706C65"),},
								Fee = new Amount(112358)},
								}
						},
						{"RentalFeeSink", new Address(Converter.Utf8ToBytes("TA2ZI764OYY233XIKTETFPGCC2HKORQSHTCUGCHX"))},
						{"RentalFee", new Amount(678000000)},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("04350DE68598599015E7F676A2A8DE24542E18115BED5DD380CE1ED1209C2208"))},
						{"Signature", new Signature(Converter.HexToBytes("52C55E52B6BE665C50A752D79869D8B212265CE0185E0F786C83A830C050ACDFF5E87F531D4C8078F11B87C2539CFE36A3A04758479D123F9F9769BBACE92D07"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("04350DE68598599015E7F676A2A8DE24542E18115BED5DD380CE1ED1209C2208"))},
			{"Signature", new Signature(Converter.HexToBytes("52C55E52B6BE665C50A752D79869D8B212265CE0185E0F786C83A830C050ACDFF5E87F531D4C8078F11B87C2539CFE36A3A04758479D123F9F9769BBACE92D07"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MosaicSupplyChangeTransactionV1_mosaic_supply_change_single_1(){
		var payload = "0240000001000098701EE77120000000F37F9FB1AFC9F6737DE4652755E6251E66ACB1FCE0A767B62F6E9DA4235E696040000000E2170899C9BFFDB63EA730C1EE0AA60A9AB086C9127242101ACF0DEFCEA8A31D9B4CA37B6644AC2B6928527338C1CB2C87EA4ADBD98A9EFAC34430B9245C6F93E0FEEEEFFEEEEFFE00000000180000000900000062616E6B7374657273070000006261696C6F7574010000004E46050000000000";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "mosaic_supply_change_transaction_v1"},
			{"MosaicId", new MosaicId{
				NamespaceId = {Name = Converter.HexToBytes("62616E6B7374657273")},
				Name = Converter.HexToBytes("6261696C6F7574")}
			},
			{"Action", MosaicSupplyChangeAction.INCREASE},
			{"Delta", 345678},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("F37F9FB1AFC9F6737DE4652755E6251E66ACB1FCE0A767B62F6E9DA4235E6960"))},
			{"Signature", new Signature(Converter.HexToBytes("E2170899C9BFFDB63EA730C1EE0AA60A9AB086C9127242101ACF0DEFCEA8A31D9B4CA37B6644AC2B6928527338C1CB2C87EA4ADBD98A9EFAC34430B9245C6F93"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MosaicSupplyChangeTransactionV1_mosaic_supply_change_single_2(){
		var payload = "0240000001000098701EE771200000001412C49C8BB197DBDEDAB0D12AF4C24A653707369B24C995F924E78D55964BB940000000575F393E380C091DCC5729454D7B839D52158AD00CFD07A735F385DBC0574266EAD33478F15B0F38788437B0F9249A4732808002E23ADC95B9BA1F3F1B86A222E0FEEEEFFEEEEFFE00000000180000000900000062616E6B7374657273070000006261696C6F75740200000065CD1D0000000000";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "mosaic_supply_change_transaction_v1"},
			{"MosaicId", new MosaicId{
				NamespaceId = {Name = Converter.HexToBytes("62616E6B7374657273")},
				Name = Converter.HexToBytes("6261696C6F7574")}
			},
			{"Action", MosaicSupplyChangeAction.DECREASE},
			{"Delta", 1953125},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("1412C49C8BB197DBDEDAB0D12AF4C24A653707369B24C995F924E78D55964BB9"))},
			{"Signature", new Signature(Converter.HexToBytes("575F393E380C091DCC5729454D7B839D52158AD00CFD07A735F385DBC0574266EAD33478F15B0F38788437B0F9249A4732808002E23ADC95B9BA1F3F1B86A222"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MosaicSupplyChangeTransactionV1_mosaic_supply_change_aggregate_1(){
		var payload = "0410000001000098701EE7712000000095D4073C8B7C43F263AAE6E1C8615C41019E2B4FC4AA2693191FC8E693CB4D5D40000000654E486DC8DB96B8C5307ABA03C65DEBD61270A24AFC473703D1FF1DB0B554C91945A07C6B1D77DE5F1406E8B48EE09480097F0402397A5AF925E3B00C091EACE0FEEEEFFEEEEFFE00000000640000000240000001000098701EE7712000000095D4073C8B7C43F263AAE6E1C8615C41019E2B4FC4AA2693191FC8E693CB4D5DE0FEEEEFFEEEEFFE00000000180000000900000062616E6B7374657273070000006261696C6F7574010000004E4605000000000000000000";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "mosaic_supply_change_transaction_v1"},
						{"MosaicId", new MosaicId{
							NamespaceId = {Name = Converter.HexToBytes("62616E6B7374657273")},
							Name = Converter.HexToBytes("6261696C6F7574")}
						},
						{"Action", MosaicSupplyChangeAction.INCREASE},
						{"Delta", 345678},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("95D4073C8B7C43F263AAE6E1C8615C41019E2B4FC4AA2693191FC8E693CB4D5D"))},
						{"Signature", new Signature(Converter.HexToBytes("654E486DC8DB96B8C5307ABA03C65DEBD61270A24AFC473703D1FF1DB0B554C91945A07C6B1D77DE5F1406E8B48EE09480097F0402397A5AF925E3B00C091EAC"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("95D4073C8B7C43F263AAE6E1C8615C41019E2B4FC4AA2693191FC8E693CB4D5D"))},
			{"Signature", new Signature(Converter.HexToBytes("654E486DC8DB96B8C5307ABA03C65DEBD61270A24AFC473703D1FF1DB0B554C91945A07C6B1D77DE5F1406E8B48EE09480097F0402397A5AF925E3B00C091EAC"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MosaicSupplyChangeTransactionV1_mosaic_supply_change_aggregate_2(){
		var payload = "0410000001000098701EE771200000008661A3B2F2D23C954942249029CA29E0ABBDDB19B15F73D8560472FCD797EAD4400000008C31F816AE5EDBDCF507DF2F6E05CA7EDF4DE59AB8C3F67AA7474D44065A9E53618859CE09F2D76B92028EA267255B2DCCA6D1E0D7A10A5F3884F936883E25DFE0FEEEEFFEEEEFFE00000000640000000240000001000098701EE771200000008661A3B2F2D23C954942249029CA29E0ABBDDB19B15F73D8560472FCD797EAD4E0FEEEEFFEEEEFFE00000000180000000900000062616E6B7374657273070000006261696C6F75740200000065CD1D000000000000000000";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "mosaic_supply_change_transaction_v1"},
						{"MosaicId", new MosaicId{
							NamespaceId = {Name = Converter.HexToBytes("62616E6B7374657273")},
							Name = Converter.HexToBytes("6261696C6F7574")}
						},
						{"Action", MosaicSupplyChangeAction.DECREASE},
						{"Delta", 1953125},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("8661A3B2F2D23C954942249029CA29E0ABBDDB19B15F73D8560472FCD797EAD4"))},
						{"Signature", new Signature(Converter.HexToBytes("8C31F816AE5EDBDCF507DF2F6E05CA7EDF4DE59AB8C3F67AA7474D44065A9E53618859CE09F2D76B92028EA267255B2DCCA6D1E0D7A10A5F3884F936883E25DF"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("8661A3B2F2D23C954942249029CA29E0ABBDDB19B15F73D8560472FCD797EAD4"))},
			{"Signature", new Signature(Converter.HexToBytes("8C31F816AE5EDBDCF507DF2F6E05CA7EDF4DE59AB8C3F67AA7474D44065A9E53618859CE09F2D76B92028EA267255B2DCCA6D1E0D7A10A5F3884F936883E25DF"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MultisigTransactionV1_multisig_aggregate_1(){
		var payload
		var cosignatures = new CosignatureV1[]
		{
			new()
			{
				MultisigTransactionHash =
					new Hash256(
						Converter.HexToBytes("b35451bdb43c11742aaf3c7566a5a6fc6677be6efb3e44cebdb7fcb2f3fd2e3b")),
				MultisigAccountAddress = new Address(Converter.Utf8ToBytes("TBT7GACQQLYXUFBSQCUHXXWQMSRDAJPACTNJ724W")),
				SignerPublicKey =
					new PublicKey(
						Converter.HexToBytes("63512D1BD0BE9CA1697866BF3BFE50F016B2CBE0C63ECAADDFF71FE495A3DD9F")),
				Signature = new Signature(Converter.HexToBytes(
					"C1203923B6886046C7758F972E594204E227DAFF33D962C09F55D982FC1938F39F2DCFC1069F886C514A0781F5E509CA9702EBF23BD4DADA06F58B0D660AF88A")),
				Fee = new Amount(18370164183782063840),
				Timestamp = new Timestamp(1910972016),
			},
			new()
			{
				MultisigTransactionHash =
					new Hash256(
						Converter.HexToBytes("b35451bdb43c11742aaf3c7566a5a6fc6677be6efb3e44cebdb7fcb2f3fd2e3b")),
				MultisigAccountAddress = new Address(Converter.Utf8ToBytes("TBT7GACQQLYXUFBSQCUHXXWQMSRDAJPACTNJ724W")),
				SignerPublicKey =
					new PublicKey(
						Converter.HexToBytes("6402DDCC2B5846ABF7CB991FE2A8F3FA8B4A1F8DE785598FB80603E646241BB9")),
				Signature = new Signature(Converter.HexToBytes(
					"026183B865EF92C671938E444DA2C27035EB3DD0DE4FD54ECE8C4B2BFF329BF5C0CEE2B12E16B8A62E386E4C98341DA20A58B6FD16FF19E658C92310A35C585F")),
				Fee = new Amount(18370164183782063840),
				Timestamp = new Timestamp(1910972016),
			},
			new()
			{
				MultisigTransactionHash =
					new Hash256(
						Converter.HexToBytes("b35451bdb43c11742aaf3c7566a5a6fc6677be6efb3e44cebdb7fcb2f3fd2e3b")),
				MultisigAccountAddress = new Address(Converter.Utf8ToBytes("TBT7GACQQLYXUFBSQCUHXXWQMSRDAJPACTNJ724W")),
				SignerPublicKey =
					new PublicKey(
						Converter.HexToBytes("58CE6B5C5AEC68B93698468EEA1821C965AD84BC1BE5BA472C48DD4653D301D8")),
				Signature = new Signature(Converter.HexToBytes(
					"781E76FB8C935524BA704C2FB8ABBDD6A179711FDBF2B8316AFF93A0E3BE8675710BE6C3692A221D1A39A45377EA0B8C7C8F1AA6083404AF302A2A684515C2D3")),
				Fee = new Amount(18370164183782063840),
				Timestamp = new Timestamp(1910972016),
			},
		};
		var sizePrefixedCosignatures = new SizePrefixedCosignatureV1[]
		{
			new()
			{
				Cosignature = cosignatures[0],
			},
			new()
			{
				Cosignature = cosignatures[1],
			},
			new()
			{
				Cosignature = cosignatures[2],
			},
		};
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "transfer_transaction_v2"},
						{"RecipientAddress", "TACQ6J4XXABJ4FRQ63ZHQ7PGDDTZCBJYK4ANOE36"},
						{"Amount", 5000001},
						{"Message", 	new Message(){
								MessageType = MessageType.PLAIN,
								MessageField = Converter.Utf8ToBytes("Good Morning"),}
						},
						{"Mosaics", 
							new Mosaic[]{
									new (){
										MosaicId = new MosaicId {
											NamespaceId = {Name = Converter.HexToBytes("6D6173732E7375727665696C6C616E6365")},
											Name = Converter.HexToBytes("656C656374726F6E6963")},
										Amount = new Amount(1394254)
								},
									new (){
										MosaicId = new MosaicId {
											NamespaceId = {Name = Converter.HexToBytes("6E656D")},
											Name = Converter.HexToBytes("78656D")},
										Amount = new Amount(379)
								},
							}
						},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("B35451BDB43C11742AAF3C7566A5A6FC6677BE6EFB3E44CEBDB7FCB2F3FD2E3B"))},
						{"Signature", new Signature(Converter.HexToBytes("A4CF491E41929CA363AC40EE3B1045911DFD1993E4A4B106643117F51053DB3138FCE6EAC9E98FBEBD63C3D496F2E6AF900197DE5C0E2D85C4BAE4E2D43ACD4A"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("B35451BDB43C11742AAF3C7566A5A6FC6677BE6EFB3E44CEBDB7FCB2F3FD2E3B"))},
			{"Signature", new Signature(Converter.HexToBytes("A4CF491E41929CA363AC40EE3B1045911DFD1993E4A4B106643117F51053DB3138FCE6EAC9E98FBEBD63C3D496F2E6AF900197DE5C0E2D85C4BAE4E2D43ACD4A"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", sizePrefixedCosignatures},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MultisigAccountModificationTransactionV1_multisig_account_modification_v1_single_1(){
		var payload = "0110000001000098701EE7712000000032C63BB68286542F5CE4C74A1A06DBBBEEA6E4972A20BCF861F07FF3EE2B59C84000000029C4EAF08D0B5D47CCE3729BCA95EAA082DE0EC856D5B36759DE51EBE4462F6D882838C3661004EFA3C616980C401BEFB98781E6C363EE5E4BDB0BDA799C1597E0FEEEEFFEEEEFFE0000000001000000280000000100000020000000D27EAF5346C5E01C3EA1EAC431833765167E3C3FB976D436C578BFFC44E44637";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_account_modification_transaction_v1"},
			{"Modifications", 	new SizePrefixedMultisigAccountModification[]{
						new (){
						Modification = new MultisigAccountModification {
							ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
							CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("D27EAF5346C5E01C3EA1EAC431833765167E3C3FB976D436C578BFFC44E44637")),
					}},
				}
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("32C63BB68286542F5CE4C74A1A06DBBBEEA6E4972A20BCF861F07FF3EE2B59C8"))},
			{"Signature", new Signature(Converter.HexToBytes("29C4EAF08D0B5D47CCE3729BCA95EAA082DE0EC856D5B36759DE51EBE4462F6D882838C3661004EFA3C616980C401BEFB98781E6C363EE5E4BDB0BDA799C1597"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MultisigAccountModificationTransactionV1_multisig_account_modification_v1_single_2(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_account_modification_transaction_v1"},
			{"Modifications", 	new SizePrefixedMultisigAccountModification[]{
						new (){
						Modification = new MultisigAccountModification {
							ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
							CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("D2FF731FE0CECBA4948173DCFC1CA8860EAABC7CA8F8495753E2AA38562AECB9")),
					}},
						new (){
						Modification = new MultisigAccountModification {
							ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
							CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("E401FF49AA42CC10C6FD2227A81C4C78D156B0AFC8B130D7B056784511E6D99E")),
					}},
						new (){
						Modification = new MultisigAccountModification {
							ModificationType = MultisigAccountModificationType.DELETE_COSIGNATORY,
							CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("50513870D3F5C0977E76B164C6EB0564939FB7C60F7B21F670A7F3234A88F316")),
					}},
				}
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("4867ED82C03073617888294B8114A7C641A2B7D77C7BDA93F0EC5F06BDE0E674"))},
			{"Signature", new Signature(Converter.HexToBytes("44BDC06CAF75B1C4139984861CF48EF145EB2B014358EF6184F1BC0CC0782E3626DEA68058C9F21B65D8999509F12CC7E1E525BE9BA40791D81FE22BCF10FDC1"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MultisigAccountModificationTransactionV1_multisig_account_modification_v1_single_3(){
		var payload = "0110000001000098701EE771200000008AB5BC8C0A74F3F8B06AC0E4CB1DDDD3D8A2F8DCB2E72A2C16D67AE59AB11C1A400000007C233DCE0F5AADAFF20D0B469F957461B3F9A965EBD056CEF7A6846CE7EC7806523B7E13A1F009B4A38A953FBDBF449D03E3AC74B78613B3928085F242A50687E0FEEEEFFEEEEFFE0000000003000000280000000100000020000000D2FF731FE0CECBA4948173DCFC1CA8860EAABC7CA8F8495753E2AA38562AECB9280000000100000020000000E401FF49AA42CC10C6FD2227A81C4C78D156B0AFC8B130D7B056784511E6D99E28000000020000002000000050513870D3F5C0977E76B164C6EB0564939FB7C60F7B21F670A7F3234A88F316";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_account_modification_transaction_v1"},
			{"Modifications", 	new SizePrefixedMultisigAccountModification[]{
						new (){
						Modification = new MultisigAccountModification {
							ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
							CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("E401FF49AA42CC10C6FD2227A81C4C78D156B0AFC8B130D7B056784511E6D99E")),
					}},
						new (){
						Modification = new MultisigAccountModification {
							ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
							CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("D2FF731FE0CECBA4948173DCFC1CA8860EAABC7CA8F8495753E2AA38562AECB9")),
					}},
						new (){
						Modification = new MultisigAccountModification {
							ModificationType = MultisigAccountModificationType.DELETE_COSIGNATORY,
							CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("50513870D3F5C0977E76B164C6EB0564939FB7C60F7B21F670A7F3234A88F316")),
					}},
				}
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("8AB5BC8C0A74F3F8B06AC0E4CB1DDDD3D8A2F8DCB2E72A2C16D67AE59AB11C1A"))},
			{"Signature", new Signature(Converter.HexToBytes("7C233DCE0F5AADAFF20D0B469F957461B3F9A965EBD056CEF7A6846CE7EC7806523B7E13A1F009B4A38A953FBDBF449D03E3AC74B78613B3928085F242A50687"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MultisigAccountModificationTransactionV1_multisig_account_modification_v1_aggregate_1(){
		var payload = "0410000001000098701EE77120000000758E9D9681B4F74CB32E7D4D35AD5CB3A048ED10464A2BBD573FC1ABE59001C6400000002F7A423985277AC4FBFB7860BEE69DCCB113324544429ED43067BFD0042F75DE8243BDBFAC71877961C7D2C0082060271C2CAFDFD68505107B2D923E54748077E0FEEEEFFEEEEFFE000000006C0000000110000001000098701EE77120000000758E9D9681B4F74CB32E7D4D35AD5CB3A048ED10464A2BBD573FC1ABE59001C6E0FEEEEFFEEEEFFE0000000001000000280000000100000020000000D27EAF5346C5E01C3EA1EAC431833765167E3C3FB976D436C578BFFC44E4463700000000";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "multisig_account_modification_transaction_v1"},
						{"Modifications", 	new SizePrefixedMultisigAccountModification[]{
									new (){
									Modification = new MultisigAccountModification {
										ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
										CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("D27EAF5346C5E01C3EA1EAC431833765167E3C3FB976D436C578BFFC44E44637")),
								}},
							}
						},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("758E9D9681B4F74CB32E7D4D35AD5CB3A048ED10464A2BBD573FC1ABE59001C6"))},
						{"Signature", new Signature(Converter.HexToBytes("2F7A423985277AC4FBFB7860BEE69DCCB113324544429ED43067BFD0042F75DE8243BDBFAC71877961C7D2C0082060271C2CAFDFD68505107B2D923E54748077"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("758E9D9681B4F74CB32E7D4D35AD5CB3A048ED10464A2BBD573FC1ABE59001C6"))},
			{"Signature", new Signature(Converter.HexToBytes("2F7A423985277AC4FBFB7860BEE69DCCB113324544429ED43067BFD0042F75DE8243BDBFAC71877961C7D2C0082060271C2CAFDFD68505107B2D923E54748077"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MultisigAccountModificationTransactionV1_multisig_account_modification_v1_aggregate_2(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "multisig_account_modification_transaction_v1"},
						{"Modifications", 	new SizePrefixedMultisigAccountModification[]{
									new (){
									Modification = new MultisigAccountModification {
										ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
										CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("D2FF731FE0CECBA4948173DCFC1CA8860EAABC7CA8F8495753E2AA38562AECB9")),
								}},
									new (){
									Modification = new MultisigAccountModification {
										ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
										CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("E401FF49AA42CC10C6FD2227A81C4C78D156B0AFC8B130D7B056784511E6D99E")),
								}},
									new (){
									Modification = new MultisigAccountModification {
										ModificationType = MultisigAccountModificationType.DELETE_COSIGNATORY,
										CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("50513870D3F5C0977E76B164C6EB0564939FB7C60F7B21F670A7F3234A88F316")),
								}},
							}
						},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("AB5E57A78351CF5878C98A2AD75A12F5EE1E8D67AA77CC103B9DF4DB1DEFFE95"))},
						{"Signature", new Signature(Converter.HexToBytes("1C33E6FBC82EB99C7BA172E78394DD2767FA1650E766692215B7D21B6247D962FF24C74CB941CF95478E43FB1E7F7E5219F0FF1FB9FFC33B6B7A8DBFF52D3DB4"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("AB5E57A78351CF5878C98A2AD75A12F5EE1E8D67AA77CC103B9DF4DB1DEFFE95"))},
			{"Signature", new Signature(Converter.HexToBytes("1C33E6FBC82EB99C7BA172E78394DD2767FA1650E766692215B7D21B6247D962FF24C74CB941CF95478E43FB1E7F7E5219F0FF1FB9FFC33B6B7A8DBFF52D3DB4"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MultisigAccountModificationTransactionV1_multisig_account_modification_v1_aggregate_3(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "multisig_account_modification_transaction_v1"},
						{"Modifications", 	new SizePrefixedMultisigAccountModification[]{
									new (){
									Modification = new MultisigAccountModification {
										ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
										CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("E401FF49AA42CC10C6FD2227A81C4C78D156B0AFC8B130D7B056784511E6D99E")),
								}},
									new (){
									Modification = new MultisigAccountModification {
										ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
										CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("D2FF731FE0CECBA4948173DCFC1CA8860EAABC7CA8F8495753E2AA38562AECB9")),
								}},
									new (){
									Modification = new MultisigAccountModification {
										ModificationType = MultisigAccountModificationType.DELETE_COSIGNATORY,
										CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("50513870D3F5C0977E76B164C6EB0564939FB7C60F7B21F670A7F3234A88F316")),
								}},
							}
						},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("3571EF10802AE392343ECA730E73488615620A7EF96EAFB673A292B5FF331C45"))},
						{"Signature", new Signature(Converter.HexToBytes("02012328766D313AF310374F30D5A283B7F85C135F53B012B596B8BBB095B1B469C79889AB081D8EE95D1690F0916907172DBF562D080E01314CE082FE2F8A92"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("3571EF10802AE392343ECA730E73488615620A7EF96EAFB673A292B5FF331C45"))},
			{"Signature", new Signature(Converter.HexToBytes("02012328766D313AF310374F30D5A283B7F85C135F53B012B596B8BBB095B1B469C79889AB081D8EE95D1690F0916907172DBF562D080E01314CE082FE2F8A92"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MultisigAccountModificationTransactionV2_multisig_account_modification_v2_single_1(){
		var payload = "0110000002000098701EE771200000006699087BE2803D81FF6BFFF142D17BDBB788D40E033265F1C43D7B96DEDFED2840000000A4B14CC14291ED2594C3D78F6F587CFBC589C40F6B9774AB8384274EE36637578E46ACB0F10BDC5411718A16DC69F6C73093D66AFCDA6B80E282783BA350CC9EE0FEEEEFFEEEEFFE00000000000000000400000002000000";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_account_modification_transaction_v2"},
			{"Modifications", System.Array.Empty<SizePrefixedMultisigAccountModification>()},
			{"MinApprovalDelta", 2},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("6699087BE2803D81FF6BFFF142D17BDBB788D40E033265F1C43D7B96DEDFED28"))},
			{"Signature", new Signature(Converter.HexToBytes("A4B14CC14291ED2594C3D78F6F587CFBC589C40F6B9774AB8384274EE36637578E46ACB0F10BDC5411718A16DC69F6C73093D66AFCDA6B80E282783BA350CC9E"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MultisigAccountModificationTransactionV2_multisig_account_modification_v2_single_2(){
		var payload = "0110000002000098701EE77120000000E491F5C6F03DFC99E7D232CF231BACEFBEB98119455FF3C28D95A5FDA539DFE340000000EA0E0C1558480237D468B3ED7F19C6C1C919BEA332131CAAFE9EB0234C5F67AD4C0B1AED21C8E59251E4AE08404BB838BB5DE10324FBD5EAF8392E8D056B769CE0FEEEEFFEEEEFFE000000000100000028000000010000002000000037D357E29CA8420FA0D615D8D1C4EEBAC06825FAC2FE4A0E28909CF6F79E0DD404000000FFFFFFFF";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_account_modification_transaction_v2"},
			{"Modifications", 	new SizePrefixedMultisigAccountModification[]{
						new (){
						Modification = new MultisigAccountModification {
							ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
							CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("37D357E29CA8420FA0D615D8D1C4EEBAC06825FAC2FE4A0E28909CF6F79E0DD4")),
					}},
				}
			},
			{"MinApprovalDelta", -1},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("E491F5C6F03DFC99E7D232CF231BACEFBEB98119455FF3C28D95A5FDA539DFE3"))},
			{"Signature", new Signature(Converter.HexToBytes("EA0E0C1558480237D468B3ED7F19C6C1C919BEA332131CAAFE9EB0234C5F67AD4C0B1AED21C8E59251E4AE08404BB838BB5DE10324FBD5EAF8392E8D056B769C"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MultisigAccountModificationTransactionV2_multisig_account_modification_v2_single_3(){
		var payload = "0110000002000098701EE771200000005CBC5F1F6D66B70259BA4DFEDFF7ECE5612CD5C34CD85AB4FD5F6C397BB3649740000000C35C4EAD56D163A8F83C4B7072DD028B70D75C91D9822808E266E9E279DE7D99D8BCCF3668EE566D8115473C105890BAAAE9C7655E18CB4422C3A7E7CDA8353EE0FEEEEFFEEEEFFE0000000003000000280000000100000020000000D79936328C188A4416224ABABF580CA2C5C8D852248DB1933FE4BC0DCA0EE7BC2800000001000000200000005D378657691CAD70CE35A46FB88CB134232B0B6B3655449C019A1F5F20AE9AAD280000000200000020000000BCEAE8AC9F6630893C75381CFA44BA971E556EA245C851D5CB224A18D68718430400000001000000";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_account_modification_transaction_v2"},
			{"Modifications", 	new SizePrefixedMultisigAccountModification[]{
						new (){
						Modification = new MultisigAccountModification {
							ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
							CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("D79936328C188A4416224ABABF580CA2C5C8D852248DB1933FE4BC0DCA0EE7BC")),
					}},
						new (){
						Modification = new MultisigAccountModification {
							ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
							CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("5D378657691CAD70CE35A46FB88CB134232B0B6B3655449C019A1F5F20AE9AAD")),
					}},
						new (){
						Modification = new MultisigAccountModification {
							ModificationType = MultisigAccountModificationType.DELETE_COSIGNATORY,
							CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("BCEAE8AC9F6630893C75381CFA44BA971E556EA245C851D5CB224A18D6871843")),
					}},
				}
			},
			{"MinApprovalDelta", 1},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("5CBC5F1F6D66B70259BA4DFEDFF7ECE5612CD5C34CD85AB4FD5F6C397BB36497"))},
			{"Signature", new Signature(Converter.HexToBytes("C35C4EAD56D163A8F83C4B7072DD028B70D75C91D9822808E266E9E279DE7D99D8BCCF3668EE566D8115473C105890BAAAE9C7655E18CB4422C3A7E7CDA8353E"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MultisigAccountModificationTransactionV2_multisig_account_modification_v2_single_4(){
		var payload = "0110000002000098701EE77120000000FD6099581E149EF00EDE172E2966819A2858B5A3D91169C9D82A68579FB6C44F4000000074456BDA58183428757C5EA372C98FB12E6C4196C9680267737621D30245C00F642142BB1D635D7507EEB2E33E19DCDAFFA84BCBAF68784C1C074D77DE91D1BFE0FEEEEFFEEEEFFE0000000003000000280000000100000020000000D79936328C188A4416224ABABF580CA2C5C8D852248DB1933FE4BC0DCA0EE7BC2800000001000000200000005D378657691CAD70CE35A46FB88CB134232B0B6B3655449C019A1F5F20AE9AAD280000000200000020000000BCEAE8AC9F6630893C75381CFA44BA971E556EA245C851D5CB224A18D68718430400000001000000";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_account_modification_transaction_v2"},
			{"Modifications", 	new SizePrefixedMultisigAccountModification[]{
						new (){
						Modification = new MultisigAccountModification {
							ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
							CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("5D378657691CAD70CE35A46FB88CB134232B0B6B3655449C019A1F5F20AE9AAD")),
					}},
						new (){
						Modification = new MultisigAccountModification {
							ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
							CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("D79936328C188A4416224ABABF580CA2C5C8D852248DB1933FE4BC0DCA0EE7BC")),
					}},
						new (){
						Modification = new MultisigAccountModification {
							ModificationType = MultisigAccountModificationType.DELETE_COSIGNATORY,
							CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("BCEAE8AC9F6630893C75381CFA44BA971E556EA245C851D5CB224A18D6871843")),
					}},
				}
			},
			{"MinApprovalDelta", 1},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("FD6099581E149EF00EDE172E2966819A2858B5A3D91169C9D82A68579FB6C44F"))},
			{"Signature", new Signature(Converter.HexToBytes("74456BDA58183428757C5EA372C98FB12E6C4196C9680267737621D30245C00F642142BB1D635D7507EEB2E33E19DCDAFFA84BCBAF68784C1C074D77DE91D1BF"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MultisigAccountModificationTransactionV2_multisig_account_modification_v2_aggregate_1(){
		var payload = "0410000001000098701EE77120000000D60E434823DA0D756E7448DB1052344CC3BAD387B4076777B1C361A018134ED640000000C6BA30DB3557984A9C43B79B6C4097FD5C67C4734AE51C487D934BA09019EA233A391D44A3A006CD4390E98D8455FBFA423F15DE69CA9255A2EF8F04F211E1D0E0FEEEEFFEEEEFFE00000000480000000110000002000098701EE77120000000D60E434823DA0D756E7448DB1052344CC3BAD387B4076777B1C361A018134ED6E0FEEEEFFEEEEFFE0000000000000000040000000200000000000000";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "multisig_account_modification_transaction_v2"},
						{"Modifications", System.Array.Empty<SizePrefixedMultisigAccountModification>()},
						{"MinApprovalDelta", 2},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("D60E434823DA0D756E7448DB1052344CC3BAD387B4076777B1C361A018134ED6"))},
						{"Signature", new Signature(Converter.HexToBytes("C6BA30DB3557984A9C43B79B6C4097FD5C67C4734AE51C487D934BA09019EA233A391D44A3A006CD4390E98D8455FBFA423F15DE69CA9255A2EF8F04F211E1D0"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("D60E434823DA0D756E7448DB1052344CC3BAD387B4076777B1C361A018134ED6"))},
			{"Signature", new Signature(Converter.HexToBytes("C6BA30DB3557984A9C43B79B6C4097FD5C67C4734AE51C487D934BA09019EA233A391D44A3A006CD4390E98D8455FBFA423F15DE69CA9255A2EF8F04F211E1D0"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MultisigAccountModificationTransactionV2_multisig_account_modification_v2_aggregate_2(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "multisig_account_modification_transaction_v2"},
						{"Modifications", 	new SizePrefixedMultisigAccountModification[]{
									new (){
									Modification = new MultisigAccountModification {
										ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
										CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("37D357E29CA8420FA0D615D8D1C4EEBAC06825FAC2FE4A0E28909CF6F79E0DD4")),
								}},
							}
						},
						{"MinApprovalDelta", -1},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("F46598FBF894834E5C08470EB9393460065F3B477F09A39A54ED1D9972B5378C"))},
						{"Signature", new Signature(Converter.HexToBytes("1288E3F647E049524FB947783D3B6C2AC9B58BE8C3C117DA5424EBF7C09B02FD3EA31686161A53699569668CFDD8B35B7AC903E1D8E5E2235C585A6DADE546BE"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("F46598FBF894834E5C08470EB9393460065F3B477F09A39A54ED1D9972B5378C"))},
			{"Signature", new Signature(Converter.HexToBytes("1288E3F647E049524FB947783D3B6C2AC9B58BE8C3C117DA5424EBF7C09B02FD3EA31686161A53699569668CFDD8B35B7AC903E1D8E5E2235C585A6DADE546BE"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MultisigAccountModificationTransactionV2_multisig_account_modification_v2_aggregate_3(){
		var payload = "0410000001000098701EE77120000000EF8148FCDE053281666D09B134B0554C8726EDAB988F78033049A78E6C8AD3B240000000209522F3C83DCDB0AAD6FC19E798678233A767B23034ED530DA3F638307DBF26FC2E0DD49277012EC5FFA60A4ED12D2EFEBAC9140D28139D1F222B23B76C972FE0FEEEEFFEEEEFFE00000000CC0000000110000002000098701EE77120000000EF8148FCDE053281666D09B134B0554C8726EDAB988F78033049A78E6C8AD3B2E0FEEEEFFEEEEFFE0000000003000000280000000100000020000000D79936328C188A4416224ABABF580CA2C5C8D852248DB1933FE4BC0DCA0EE7BC2800000001000000200000005D378657691CAD70CE35A46FB88CB134232B0B6B3655449C019A1F5F20AE9AAD280000000200000020000000BCEAE8AC9F6630893C75381CFA44BA971E556EA245C851D5CB224A18D6871843040000000100000000000000";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "multisig_account_modification_transaction_v2"},
						{"Modifications", 	new SizePrefixedMultisigAccountModification[]{
									new (){
									Modification = new MultisigAccountModification {
										ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
										CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("D79936328C188A4416224ABABF580CA2C5C8D852248DB1933FE4BC0DCA0EE7BC")),
								}},
									new (){
									Modification = new MultisigAccountModification {
										ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
										CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("5D378657691CAD70CE35A46FB88CB134232B0B6B3655449C019A1F5F20AE9AAD")),
								}},
									new (){
									Modification = new MultisigAccountModification {
										ModificationType = MultisigAccountModificationType.DELETE_COSIGNATORY,
										CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("BCEAE8AC9F6630893C75381CFA44BA971E556EA245C851D5CB224A18D6871843")),
								}},
							}
						},
						{"MinApprovalDelta", 1},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("EF8148FCDE053281666D09B134B0554C8726EDAB988F78033049A78E6C8AD3B2"))},
						{"Signature", new Signature(Converter.HexToBytes("209522F3C83DCDB0AAD6FC19E798678233A767B23034ED530DA3F638307DBF26FC2E0DD49277012EC5FFA60A4ED12D2EFEBAC9140D28139D1F222B23B76C972F"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("EF8148FCDE053281666D09B134B0554C8726EDAB988F78033049A78E6C8AD3B2"))},
			{"Signature", new Signature(Converter.HexToBytes("209522F3C83DCDB0AAD6FC19E798678233A767B23034ED530DA3F638307DBF26FC2E0DD49277012EC5FFA60A4ED12D2EFEBAC9140D28139D1F222B23B76C972F"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void MultisigAccountModificationTransactionV2_multisig_account_modification_v2_aggregate_4(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "multisig_account_modification_transaction_v2"},
						{"Modifications", 	new SizePrefixedMultisigAccountModification[]{
									new (){
									Modification = new MultisigAccountModification {
										ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
										CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("5D378657691CAD70CE35A46FB88CB134232B0B6B3655449C019A1F5F20AE9AAD")),
								}},
									new (){
									Modification = new MultisigAccountModification {
										ModificationType = MultisigAccountModificationType.ADD_COSIGNATORY,
										CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("D79936328C188A4416224ABABF580CA2C5C8D852248DB1933FE4BC0DCA0EE7BC")),
								}},
									new (){
									Modification = new MultisigAccountModification {
										ModificationType = MultisigAccountModificationType.DELETE_COSIGNATORY,
										CosignatoryPublicKey = new PublicKey(Converter.HexToBytes("BCEAE8AC9F6630893C75381CFA44BA971E556EA245C851D5CB224A18D6871843")),
								}},
							}
						},
						{"MinApprovalDelta", 1},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("A40E77C8E4DF0F7937E7313229219EB82856B57511A1664ED2805A2EF09DE1F1"))},
						{"Signature", new Signature(Converter.HexToBytes("9DB08CBA4B1E40273C51DD7FAD0D884349748D4CEEDE6EB47802BC7C3CAEF8487EB237ACD3BC65DEC94B3AEF566F797B3CC7A8A5980EDC554F44A9807202CA84"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("A40E77C8E4DF0F7937E7313229219EB82856B57511A1664ED2805A2EF09DE1F1"))},
			{"Signature", new Signature(Converter.HexToBytes("9DB08CBA4B1E40273C51DD7FAD0D884349748D4CEEDE6EB47802BC7C3CAEF8487EB237ACD3BC65DEC94B3AEF566F797B3CC7A8A5980EDC554F44A9807202CA84"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void NamespaceRegistrationTransactionV1_namespace_registration_single_1(){
		var payload = "0120000001000098701EE7712000000015A62A582DA8A52B13BB59EBE39FF2E4155FA2C822CBB0268BDDE5FA00F4F8FF400000006F81F080720F6F641386F1320BCD4B641345CA1D3FF4D7DE302B0EA28D0E8869F3FCC0BACD72C3FF897CB620ED6B713B07F68B6312428A3C6C09B88FCAD0789AE0FEEEEFFEEEEFFE0000000028000000544354585A535A545A4751425753374D525854574D4F5237324C5058325945564B4958474449484C8075692800000000050000007374617465FFFFFFFF";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "namespace_registration_transaction_v1"},
			{"RentalFeeSink", new Address(Converter.Utf8ToBytes("TCTXZSZTZGQBWS7MRXTWMOR72LPX2YEVKIXGDIHL"))},
			{"RentalFee", new Amount(678000000)},
			{"ParentName", System.Array.Empty<byte>()},
			{"Name", "7374617465"},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("15A62A582DA8A52B13BB59EBE39FF2E4155FA2C822CBB0268BDDE5FA00F4F8FF"))},
			{"Signature", new Signature(Converter.HexToBytes("6F81F080720F6F641386F1320BCD4B641345CA1D3FF4D7DE302B0EA28D0E8869F3FCC0BACD72C3FF897CB620ED6B713B07F68B6312428A3C6C09B88FCAD0789A"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void NamespaceRegistrationTransactionV1_namespace_registration_single_2(){
		var payload = "0120000001000098701EE7712000000000C8921E7F8A214345AC3A2E15FA9651622A4FA7E609FC6BDE2E79063DCBD3364000000059C951AD8691705F1EB49D80B78B850B4114F38E0FCC64DAC404E9AA44DCBAA8A3DCFE82DF1275E278F8B8C98D3B83FB6328F257937AD4490B944C4AE27904B3E0FEEEEFFEEEEFFE0000000028000000544154564A58464E4737424C374E44484E45514E414E454F4F3255574135354A504A37553549325080756928000000000A000000636F6E74726F6C6C6564050000007374617465";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "namespace_registration_transaction_v1"},
			{"RentalFeeSink", new Address(Converter.Utf8ToBytes("TATVJXFNG7BL7NDHNEQNANEOO2UWA55JPJ7U5I2P"))},
			{"RentalFee", new Amount(678000000)},
			{"Name", "636F6E74726F6C6C6564"},
			{"ParentName", Converter.HexToBytes("7374617465")},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("00C8921E7F8A214345AC3A2E15FA9651622A4FA7E609FC6BDE2E79063DCBD336"))},
			{"Signature", new Signature(Converter.HexToBytes("59C951AD8691705F1EB49D80B78B850B4114F38E0FCC64DAC404E9AA44DCBAA8A3DCFE82DF1275E278F8B8C98D3B83FB6328F257937AD4490B944C4AE27904B3"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void NamespaceRegistrationTransactionV1_namespace_registration_aggregate_1(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "namespace_registration_transaction_v1"},
						{"RentalFeeSink", new Address(Converter.Utf8ToBytes("TCTXZSZTZGQBWS7MRXTWMOR72LPX2YEVKIXGDIHL"))},
						{"RentalFee", new Amount(678000000)},
						{"ParentName", System.Array.Empty<byte>()},
						{"Name", "7374617465"},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("C3327284E6AC67B1A558F95797CF2EFC994BCECA4EBBCCB4592CB6B8F645DC2D"))},
						{"Signature", new Signature(Converter.HexToBytes("4C08B813E15C24982EE1D908942CBC07F7EE373EB78F99935D657CAB1CE6397156FF07C97D334F8E2E71B57E293E98B0523633FF36C052E3AB0B5E3FF4924310"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("C3327284E6AC67B1A558F95797CF2EFC994BCECA4EBBCCB4592CB6B8F645DC2D"))},
			{"Signature", new Signature(Converter.HexToBytes("4C08B813E15C24982EE1D908942CBC07F7EE373EB78F99935D657CAB1CE6397156FF07C97D334F8E2E71B57E293E98B0523633FF36C052E3AB0B5E3FF4924310"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void NamespaceRegistrationTransactionV1_namespace_registration_aggregate_2(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "namespace_registration_transaction_v1"},
						{"RentalFeeSink", new Address(Converter.Utf8ToBytes("TATVJXFNG7BL7NDHNEQNANEOO2UWA55JPJ7U5I2P"))},
						{"RentalFee", new Amount(678000000)},
						{"Name", "636F6E74726F6C6C6564"},
						{"ParentName", Converter.HexToBytes("7374617465")},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("2491954E840A79E330BD295F8FF0A15863384734583B9AB6E83815AF9438C086"))},
						{"Signature", new Signature(Converter.HexToBytes("BC0F54C2F8ECC9AF9964BA7BBD76797981A7030F037228B256F220C04E0CA1A9C2C45C9E4A8914143E1AAD5E1DFDB2A4503BC1D0095EB21FC2CD8B0DF21D31A2"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("2491954E840A79E330BD295F8FF0A15863384734583B9AB6E83815AF9438C086"))},
			{"Signature", new Signature(Converter.HexToBytes("BC0F54C2F8ECC9AF9964BA7BBD76797981A7030F037228B256F220C04E0CA1A9C2C45C9E4A8914143E1AAD5E1DFDB2A4503BC1D0095EB21FC2CD8B0DF21D31A2"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void TransferTransactionV1_transfer_v1_single_1(){
		var payload = "0101000001000098701EE77120000000A7D932054182A5D0461871774BA43B5364CECC755B9ADF6C6AD38C7C5A5A34F440000000EB8998AC21997F369C709A07E58D5BB517DD39EC7779485358791229CE9ADD49667B6C4516B0D11B2296FA1075FF9D0B23F108D80AD28EE4EBC4C313C8F345D0E0FEEEEFFEEEEFFE000000002800000054414351364A34585841424A3446525136335A48513750474444545A43424A594B34414E4F453336401E92589800000000000000";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "transfer_transaction_v1"},
			{"RecipientAddress", "TACQ6J4XXABJ4FRQ63ZHQ7PGDDTZCBJYK4ANOE36"},
			{"Amount", 654321000000},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("A7D932054182A5D0461871774BA43B5364CECC755B9ADF6C6AD38C7C5A5A34F4"))},
			{"Signature", new Signature(Converter.HexToBytes("EB8998AC21997F369C709A07E58D5BB517DD39EC7779485358791229CE9ADD49667B6C4516B0D11B2296FA1075FF9D0B23F108D80AD28EE4EBC4C313C8F345D0"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void TransferTransactionV1_transfer_single_2(){
		var payload = "0101000001000098701EE77120000000B0A48186B2D8C168DBAF2395AD3BF421F9E44D7AD8E616C5E981ABD1DB5190F24000000042D030CD0166DA62C1DF1FF0945752475FBD2B4B975E9991EFF57BCD742C235787433B8AF428C3852009C8C63B632572057945118F393F4187FF51DFD77CAC6DE0FEEEEFFEEEEFFE000000002800000054414351364A34585841424A3446525136335A48513750474444545A43424A594B34414E4F453336401E925898000000080000000100000000000000";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "transfer_transaction_v1"},
			{"RecipientAddress", "TACQ6J4XXABJ4FRQ63ZHQ7PGDDTZCBJYK4ANOE36"},
			{"Amount", 654321000000},
			{"Message", 	new Message(){
					MessageType = MessageType.PLAIN,
					MessageField = Converter.HexToBytes(""),}
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("B0A48186B2D8C168DBAF2395AD3BF421F9E44D7AD8E616C5E981ABD1DB5190F2"))},
			{"Signature", new Signature(Converter.HexToBytes("42D030CD0166DA62C1DF1FF0945752475FBD2B4B975E9991EFF57BCD742C235787433B8AF428C3852009C8C63B632572057945118F393F4187FF51DFD77CAC6D"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void TransferTransactionV1_transfer_single_3(){
		var payload = "0101000001000098701EE771200000005A76A15971385920F91E666BD0698687C0A5C50D6FCEE82E9F1FDC4D8BC7F51840000000C1DD9E45551CF35D8F058C73A8E3813B107A5D6EC6393F60B8B2F294E1C831FF96F30CB71D18EBEE2C96146D97DF1CFA252B8B3988697015150D7CDFEF884463E0FEEEEFFEEEEFFE000000002800000054414351364A34585841424A3446525136335A48513750474444545A43424A594B34414E4F453336401E9258980000000B0000000100000003000000686921";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "transfer_transaction_v1"},
			{"RecipientAddress", "TACQ6J4XXABJ4FRQ63ZHQ7PGDDTZCBJYK4ANOE36"},
			{"Amount", 654321000000},
			{"Message", 	new Message(){
					MessageType = MessageType.PLAIN,
					MessageField = Converter.HexToBytes("686921"),}
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("5A76A15971385920F91E666BD0698687C0A5C50D6FCEE82E9F1FDC4D8BC7F518"))},
			{"Signature", new Signature(Converter.HexToBytes("C1DD9E45551CF35D8F058C73A8E3813B107A5D6EC6393F60B8B2F294E1C831FF96F30CB71D18EBEE2C96146D97DF1CFA252B8B3988697015150D7CDFEF884463"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void TransferTransactionV1_transfer_single_4(){
		var payload = "0101000001000098701EE771200000002558851FBDECC3CFAD26DE0050EAA6661B81F2CCE59F3A6672766CD8EC8EE3AA400000005A5763BD9CE487F745C0A5F4D2D2F4167778878C9C119B03C549F915ED471B6AD05F51A76C4CE9CC7BCF58958A6DC64B3C43584D1651B64FBBFCD42FCAD1DEBFE0FEEEEFFEEEEFFE000000002800000054414351364A34585841424A3446525136335A48513750474444545A43424A594B34414E4F453336401E925898000000480000000200000040000000642E756F0DBF4BE90EFCAB7AB42F297ED64EDC83E05062F8E49F6CAC61FBBA9F8D198B4B79A33096C58977C9134FAEE74307A6E55156BF6C2718E2B0D44BE050";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "transfer_transaction_v1"},
			{"RecipientAddress", "TACQ6J4XXABJ4FRQ63ZHQ7PGDDTZCBJYK4ANOE36"},
			{"Amount", 654321000000},
			{"Message", 	new Message(){
					MessageType = MessageType.ENCRYPTED,
					MessageField = Converter.HexToBytes("642E756F0DBF4BE90EFCAB7AB42F297ED64EDC83E05062F8E49F6CAC61FBBA9F8D198B4B79A33096C58977C9134FAEE74307A6E55156BF6C2718E2B0D44BE050"),}
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("2558851FBDECC3CFAD26DE0050EAA6661B81F2CCE59F3A6672766CD8EC8EE3AA"))},
			{"Signature", new Signature(Converter.HexToBytes("5A5763BD9CE487F745C0A5F4D2D2F4167778878C9C119B03C549F915ED471B6AD05F51A76C4CE9CC7BCF58958A6DC64B3C43584D1651B64FBBFCD42FCAD1DEBF"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void TransferTransactionV1_transfer_v1_aggregate_1(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "transfer_transaction_v1"},
						{"RecipientAddress", "TACQ6J4XXABJ4FRQ63ZHQ7PGDDTZCBJYK4ANOE36"},
						{"Amount", 654321000000},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("454852B08AA724CBA3FB7CE77DE3DF49F11D17EB43CA32D3C4A5F5C368ABC42A"))},
						{"Signature", new Signature(Converter.HexToBytes("58BD925C85C56EC3C14AAC4190760E370BE4CBA71113DE23D1008F7D287FC60700A18F0B61AA7C5581DC2A2CF5EF0E598367DAED7521FD437A8A843CAB79F926"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("454852B08AA724CBA3FB7CE77DE3DF49F11D17EB43CA32D3C4A5F5C368ABC42A"))},
			{"Signature", new Signature(Converter.HexToBytes("58BD925C85C56EC3C14AAC4190760E370BE4CBA71113DE23D1008F7D287FC60700A18F0B61AA7C5581DC2A2CF5EF0E598367DAED7521FD437A8A843CAB79F926"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void TransferTransactionV1_transfer_aggregate_2(){
		var payload = "0410000001000098701EE7712000000020D7B516D60461DDBDBF41E29F111DAB28951B5E1E257B560889766C7F210D6240000000C3CB1685625F7B50CB6CE902EB01C6B87EA219EAA24C4B8C99470228725ACAA913838F8C526ABD8E73C3D07FAE029C7F2952DA60D2C45CAF2CEC06FE6086DB1DE0FEEEEFFEEEEFFE000000007C0000000101000001000098701EE7712000000020D7B516D60461DDBDBF41E29F111DAB28951B5E1E257B560889766C7F210D62E0FEEEEFFEEEEFFE000000002800000054414351364A34585841424A3446525136335A48513750474444545A43424A594B34414E4F453336401E92589800000008000000010000000000000000000000";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "transfer_transaction_v1"},
						{"RecipientAddress", "TACQ6J4XXABJ4FRQ63ZHQ7PGDDTZCBJYK4ANOE36"},
						{"Amount", 654321000000},
						{"Message", 	new Message(){
								MessageType = MessageType.PLAIN,
								MessageField = Converter.HexToBytes(""),}
						},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("20D7B516D60461DDBDBF41E29F111DAB28951B5E1E257B560889766C7F210D62"))},
						{"Signature", new Signature(Converter.HexToBytes("C3CB1685625F7B50CB6CE902EB01C6B87EA219EAA24C4B8C99470228725ACAA913838F8C526ABD8E73C3D07FAE029C7F2952DA60D2C45CAF2CEC06FE6086DB1D"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("20D7B516D60461DDBDBF41E29F111DAB28951B5E1E257B560889766C7F210D62"))},
			{"Signature", new Signature(Converter.HexToBytes("C3CB1685625F7B50CB6CE902EB01C6B87EA219EAA24C4B8C99470228725ACAA913838F8C526ABD8E73C3D07FAE029C7F2952DA60D2C45CAF2CEC06FE6086DB1D"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void TransferTransactionV1_transfer_aggregate_3(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "transfer_transaction_v1"},
						{"RecipientAddress", "TACQ6J4XXABJ4FRQ63ZHQ7PGDDTZCBJYK4ANOE36"},
						{"Amount", 654321000000},
						{"Message", 	new Message(){
								MessageType = MessageType.PLAIN,
								MessageField = Converter.HexToBytes("686921"),}
						},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("A311444F2A64E4E1D9864C117076FA4AA1629FC011AD6103B2FB7FC614F60EDE"))},
						{"Signature", new Signature(Converter.HexToBytes("C9F0161425259D1D2984B589F7C2C6F2F0B00E1233103F204AD082152C0E1DD549993443C85FDB91C130F8A4CABDF445852E9B2B0AECEB355E57D2BC83B28D84"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("A311444F2A64E4E1D9864C117076FA4AA1629FC011AD6103B2FB7FC614F60EDE"))},
			{"Signature", new Signature(Converter.HexToBytes("C9F0161425259D1D2984B589F7C2C6F2F0B00E1233103F204AD082152C0E1DD549993443C85FDB91C130F8A4CABDF445852E9B2B0AECEB355E57D2BC83B28D84"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void TransferTransactionV1_transfer_aggregate_4(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "transfer_transaction_v1"},
						{"RecipientAddress", "TACQ6J4XXABJ4FRQ63ZHQ7PGDDTZCBJYK4ANOE36"},
						{"Amount", 654321000000},
						{"Message", 	new Message(){
								MessageType = MessageType.ENCRYPTED,
								MessageField = Converter.HexToBytes("642E756F0DBF4BE90EFCAB7AB42F297ED64EDC83E05062F8E49F6CAC61FBBA9F8D198B4B79A33096C58977C9134FAEE74307A6E55156BF6C2718E2B0D44BE050"),}
						},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("7C4A1D083B98CCA7D7A7F467B1ECCE4CD8ED1B3D4615724B590B07E852B4A89C"))},
						{"Signature", new Signature(Converter.HexToBytes("E9255429A2B8253E6FBC0FFBBE00222DB8B5FBB5606EE98811B763CE3EE63C81D24365B2C4392389172356B16C43F633A1D76C9F594257AA017C3EEA028F2D2C"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("7C4A1D083B98CCA7D7A7F467B1ECCE4CD8ED1B3D4615724B590B07E852B4A89C"))},
			{"Signature", new Signature(Converter.HexToBytes("E9255429A2B8253E6FBC0FFBBE00222DB8B5FBB5606EE98811B763CE3EE63C81D24365B2C4392389172356B16C43F633A1D76C9F594257AA017C3EEA028F2D2C"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void TransferTransactionV2_transfer_single_5(){
		var payload = "0101000002000098701EE7712000000042DE093E021132A996578B14BF18CD8E2E684393AD56357D5510448EBDDB9A89400000006ECDEEC9EB95526ABB5C136EE5DD126ECF450FB99DF39DBB6D0069B5C3D5F8EC6E616335F612D55D2AC884C028CC04C8B3823E98494D1274EFEB3CC86E187E57E0FEEEEFFEEEEFFE000000002800000054414351364A34585841424A3446525136335A48513750474444545A43424A594B34414E4F453336404B4C00000000000B0000000100000003000000686921010000002F00000023000000110000006D6173732E7375727665696C6C616E63650A000000656C656374726F6E69634E46050000000000";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "transfer_transaction_v2"},
			{"RecipientAddress", "TACQ6J4XXABJ4FRQ63ZHQ7PGDDTZCBJYK4ANOE36"},
			{"Amount", 5000000},
			{"Message", 	new Message(){
					MessageType = MessageType.PLAIN,
					MessageField = Converter.HexToBytes("686921"),}
			},
			{"Mosaics", 
				new Mosaic[]{
						new (){
							MosaicId = new MosaicId {
								NamespaceId = {Name = Converter.HexToBytes("6D6173732E7375727665696C6C616E6365")},
								Name = Converter.HexToBytes("656C656374726F6E6963")},
							Amount = new Amount(345678)
					},
				}
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("42DE093E021132A996578B14BF18CD8E2E684393AD56357D5510448EBDDB9A89"))},
			{"Signature", new Signature(Converter.HexToBytes("6ECDEEC9EB95526ABB5C136EE5DD126ECF450FB99DF39DBB6D0069B5C3D5F8EC6E616335F612D55D2AC884C028CC04C8B3823E98494D1274EFEB3CC86E187E57"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void TransferTransactionV2_transfer_single_6(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "transfer_transaction_v2"},
			{"RecipientAddress", "TACQ6J4XXABJ4FRQ63ZHQ7PGDDTZCBJYK4ANOE36"},
			{"Amount", 5000000},
			{"Message", 	new Message(){
					MessageType = MessageType.ENCRYPTED,
					MessageField = Converter.HexToBytes("3F7FED92C755C444C492BD5DFD003A0F6F7E257A4DE7CC91E33EDD477F29C9BB5BD906BE5CC9E20B80A4F7C65C24727FAC4145AD42E055DBEDF516D96D386516"),}
			},
			{"Mosaics", 
				new Mosaic[]{
						new (){
							MosaicId = new MosaicId {
								NamespaceId = {Name = Converter.HexToBytes("6D6173732E7375727665696C6C616E6365")},
								Name = Converter.HexToBytes("656C656374726F6E6963")},
							Amount = new Amount(345678)
					},
				}
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("CF39D5BE1DDEEDF09782523EB99DF7A86C391C65EC1EAABD698952D73344593A"))},
			{"Signature", new Signature(Converter.HexToBytes("1F849CEF708CB9A83610DB0588F4F983D9A34DD7FAC1E349F4608A189D49A9457B6C005565A4FA5003B7413BB7A902D2EC664554750BD689CFC9A1AE3E3B76E5"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void TransferTransactionV2_transfer_single_7(){
		var payload = "0101000002000098701EE771200000006A1BD4D6F6613E0A3CC78AF80C2A4A12E30ED64914285A6E1DA7E230D6CB33364000000065CFD2BD6973C6F1AF0013EFD967C7992C2A72EF3D755B5174745A05285F399DF9E8F7993AA414274714ABA811B960B331CE2E81297598AD061017006D9F7254E0FEEEEFFEEEEFFE000000002800000054414351364A34585841424A3446525136335A48513750474444545A43424A594B34414E4F453336404B4C00000000000B000000010000000300000068692103000000250000001900000006000000616C6D6F73740B0000006E6F6E66756E6769626C6502000000000000002F00000023000000110000006D6173732E7375727665696C6C616E63650A000000656C656374726F6E69634E460500000000001A0000000E000000030000006E656D0300000078656D7B00000000000000";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "transfer_transaction_v2"},
			{"RecipientAddress", "TACQ6J4XXABJ4FRQ63ZHQ7PGDDTZCBJYK4ANOE36"},
			{"Amount", 5000000},
			{"Message", 	new Message(){
					MessageType = MessageType.PLAIN,
					MessageField = Converter.HexToBytes("686921"),}
			},
			{"Mosaics", 
				new Mosaic[]{
						new (){
							MosaicId = new MosaicId {
								NamespaceId = {Name = Converter.HexToBytes("616C6D6F7374")},
								Name = Converter.HexToBytes("6E6F6E66756E6769626C65")},
							Amount = new Amount(2)
					},
						new (){
							MosaicId = new MosaicId {
								NamespaceId = {Name = Converter.HexToBytes("6D6173732E7375727665696C6C616E6365")},
								Name = Converter.HexToBytes("656C656374726F6E6963")},
							Amount = new Amount(345678)
					},
						new (){
							MosaicId = new MosaicId {
								NamespaceId = {Name = Converter.HexToBytes("6E656D")},
								Name = Converter.HexToBytes("78656D")},
							Amount = new Amount(123)
					},
				}
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("6A1BD4D6F6613E0A3CC78AF80C2A4A12E30ED64914285A6E1DA7E230D6CB3336"))},
			{"Signature", new Signature(Converter.HexToBytes("65CFD2BD6973C6F1AF0013EFD967C7992C2A72EF3D755B5174745A05285F399DF9E8F7993AA414274714ABA811B960B331CE2E81297598AD061017006D9F7254"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void TransferTransactionV2_transfer_single_8(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "transfer_transaction_v2"},
			{"RecipientAddress", "TACQ6J4XXABJ4FRQ63ZHQ7PGDDTZCBJYK4ANOE36"},
			{"Amount", 5000000},
			{"Message", 	new Message(){
					MessageType = MessageType.ENCRYPTED,
					MessageField = Converter.HexToBytes("48365F97EB76BAD136AC4630E792D1610B6591C9BF7DE0EA9D618FD7480AAE21A092BC8223F427B8263C7ED4EB665C945B569E42F48FF1A50A4CD20A3AF5173D"),}
			},
			{"Mosaics", 
				new Mosaic[]{
						new (){
							MosaicId = new MosaicId {
								NamespaceId = {Name = Converter.HexToBytes("616C6D6F7374")},
								Name = Converter.HexToBytes("6E6F6E66756E6769626C65")},
							Amount = new Amount(2)
					},
						new (){
							MosaicId = new MosaicId {
								NamespaceId = {Name = Converter.HexToBytes("6D6173732E7375727665696C6C616E6365")},
								Name = Converter.HexToBytes("656C656374726F6E6963")},
							Amount = new Amount(345678)
					},
						new (){
							MosaicId = new MosaicId {
								NamespaceId = {Name = Converter.HexToBytes("6E656D")},
								Name = Converter.HexToBytes("78656D")},
							Amount = new Amount(123)
					},
				}
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("EB06B5FC2D5F608CBF741C38482DA0FCCF49790FEAEC8A63319EF34E903078CD"))},
			{"Signature", new Signature(Converter.HexToBytes("15D45D2C96301CA9DE749F44518CC86FDC2784C7CE058F5CF71AA7C06595A944C681AFB7FEDA5055477B933F8BA543410C90747D926163233DCF9747344636F7"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void TransferTransactionV2_transfer_aggregate_5(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "transfer_transaction_v2"},
						{"RecipientAddress", "TACQ6J4XXABJ4FRQ63ZHQ7PGDDTZCBJYK4ANOE36"},
						{"Amount", 5000000},
						{"Message", 	new Message(){
								MessageType = MessageType.PLAIN,
								MessageField = Converter.HexToBytes("686921"),}
						},
						{"Mosaics", 
							new Mosaic[]{
									new (){
										MosaicId = new MosaicId {
											NamespaceId = {Name = Converter.HexToBytes("6D6173732E7375727665696C6C616E6365")},
											Name = Converter.HexToBytes("656C656374726F6E6963")},
										Amount = new Amount(345678)
								},
							}
						},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("68A788ED16CA672F22B55E563B46826BFC82A44858E18F83399896EE1E242101"))},
						{"Signature", new Signature(Converter.HexToBytes("6B58E258C7BB0D3C6CFFFD2FB4869076D63E940DDC93DDBA350BFEBAAFB69BEC080A0A0FA503C65D873DE056E8808C37AFBD9743AD4E11478105E332A0F18C3A"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("68A788ED16CA672F22B55E563B46826BFC82A44858E18F83399896EE1E242101"))},
			{"Signature", new Signature(Converter.HexToBytes("6B58E258C7BB0D3C6CFFFD2FB4869076D63E940DDC93DDBA350BFEBAAFB69BEC080A0A0FA503C65D873DE056E8808C37AFBD9743AD4E11478105E332A0F18C3A"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void TransferTransactionV2_transfer_aggregate_6(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "transfer_transaction_v2"},
						{"RecipientAddress", "TACQ6J4XXABJ4FRQ63ZHQ7PGDDTZCBJYK4ANOE36"},
						{"Amount", 5000000},
						{"Message", 	new Message(){
								MessageType = MessageType.ENCRYPTED,
								MessageField = Converter.HexToBytes("3F7FED92C755C444C492BD5DFD003A0F6F7E257A4DE7CC91E33EDD477F29C9BB5BD906BE5CC9E20B80A4F7C65C24727FAC4145AD42E055DBEDF516D96D386516"),}
						},
						{"Mosaics", 
							new Mosaic[]{
									new (){
										MosaicId = new MosaicId {
											NamespaceId = {Name = Converter.HexToBytes("6D6173732E7375727665696C6C616E6365")},
											Name = Converter.HexToBytes("656C656374726F6E6963")},
										Amount = new Amount(345678)
								},
							}
						},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("524C73D9C23F3F1091548C14E08880E5A994BE5774511FC747345357E749B6B2"))},
						{"Signature", new Signature(Converter.HexToBytes("BC413FE678E8D0084E2B3F746AA25C88219022EBABDA87746B676663DC84620475D62B70D17DF70C7DF9C225A51AC86403E2CB71400846373E60E6FC64E2AC36"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("524C73D9C23F3F1091548C14E08880E5A994BE5774511FC747345357E749B6B2"))},
			{"Signature", new Signature(Converter.HexToBytes("BC413FE678E8D0084E2B3F746AA25C88219022EBABDA87746B676663DC84620475D62B70D17DF70C7DF9C225A51AC86403E2CB71400846373E60E6FC64E2AC36"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void TransferTransactionV2_transfer_aggregate_7(){
		var payload = "0410000001000098701EE77120000000044270D2220575144EBCB295B9BEF0F26D228629CB021D838EF1BFE3BB73722C400000000521ACBD666D68A0486A48B7D49C1B17EE79445105986DC3D28600729F6F36D0734566FAC5BFC8900C6020B6C5586715C94170A751F873BD0CBEC14E1BF58EDAE0FEEEEFFEEEEFFE00000000FD0000000101000002000098701EE77120000000044270D2220575144EBCB295B9BEF0F26D228629CB021D838EF1BFE3BB73722CE0FEEEEFFEEEEFFE000000002800000054414351364A34585841424A3446525136335A48513750474444545A43424A594B34414E4F453336404B4C00000000000B000000010000000300000068692103000000250000001900000006000000616C6D6F73740B0000006E6F6E66756E6769626C6502000000000000002F00000023000000110000006D6173732E7375727665696C6C616E63650A000000656C656374726F6E69634E460500000000001A0000000E000000030000006E656D0300000078656D7B0000000000000000000000";
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "transfer_transaction_v2"},
						{"RecipientAddress", "TACQ6J4XXABJ4FRQ63ZHQ7PGDDTZCBJYK4ANOE36"},
						{"Amount", 5000000},
						{"Message", 	new Message(){
								MessageType = MessageType.PLAIN,
								MessageField = Converter.HexToBytes("686921"),}
						},
						{"Mosaics", 
							new Mosaic[]{
									new (){
										MosaicId = new MosaicId {
											NamespaceId = {Name = Converter.HexToBytes("616C6D6F7374")},
											Name = Converter.HexToBytes("6E6F6E66756E6769626C65")},
										Amount = new Amount(2)
								},
									new (){
										MosaicId = new MosaicId {
											NamespaceId = {Name = Converter.HexToBytes("6D6173732E7375727665696C6C616E6365")},
											Name = Converter.HexToBytes("656C656374726F6E6963")},
										Amount = new Amount(345678)
								},
									new (){
										MosaicId = new MosaicId {
											NamespaceId = {Name = Converter.HexToBytes("6E656D")},
											Name = Converter.HexToBytes("78656D")},
										Amount = new Amount(123)
								},
							}
						},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("044270D2220575144EBCB295B9BEF0F26D228629CB021D838EF1BFE3BB73722C"))},
						{"Signature", new Signature(Converter.HexToBytes("0521ACBD666D68A0486A48B7D49C1B17EE79445105986DC3D28600729F6F36D0734566FAC5BFC8900C6020B6C5586715C94170A751F873BD0CBEC14E1BF58EDA"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("044270D2220575144EBCB295B9BEF0F26D228629CB021D838EF1BFE3BB73722C"))},
			{"Signature", new Signature(Converter.HexToBytes("0521ACBD666D68A0486A48B7D49C1B17EE79445105986DC3D28600729F6F36D0734566FAC5BFC8900C6020B6C5586715C94170A751F873BD0CBEC14E1BF58EDA"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
	[Test]
	public void TransferTransactionV2_transfer_aggregate_8(){
		var payload
		var descriptor = new Dictionary<string, object>(){
			{"Type", "multisig_transaction_v1"},
			{"InnerTransaction", 
				TransactionsFactory.ToNonVerifiableTransaction(Facade.TransactionFactory.Create(new Dictionary<string, object>() {
						{"Type", "transfer_transaction_v2"},
						{"RecipientAddress", "TACQ6J4XXABJ4FRQ63ZHQ7PGDDTZCBJYK4ANOE36"},
						{"Amount", 5000000},
						{"Message", 	new Message(){
								MessageType = MessageType.ENCRYPTED,
								MessageField = Converter.HexToBytes("48365F97EB76BAD136AC4630E792D1610B6591C9BF7DE0EA9D618FD7480AAE21A092BC8223F427B8263C7ED4EB665C945B569E42F48FF1A50A4CD20A3AF5173D"),}
						},
						{"Mosaics", 
							new Mosaic[]{
									new (){
										MosaicId = new MosaicId {
											NamespaceId = {Name = Converter.HexToBytes("616C6D6F7374")},
											Name = Converter.HexToBytes("6E6F6E66756E6769626C65")},
										Amount = new Amount(2)
								},
									new (){
										MosaicId = new MosaicId {
											NamespaceId = {Name = Converter.HexToBytes("6D6173732E7375727665696C6C616E6365")},
											Name = Converter.HexToBytes("656C656374726F6E6963")},
										Amount = new Amount(345678)
								},
									new (){
										MosaicId = new MosaicId {
											NamespaceId = {Name = Converter.HexToBytes("6E656D")},
											Name = Converter.HexToBytes("78656D")},
										Amount = new Amount(123)
								},
							}
						},
						{"SignerPublicKey", new PublicKey(Converter.HexToBytes("A1D1F8779B2BE3CCC9BCF61055347CF5D8EEAD26E68F1B37B703A8A6F529D5C3"))},
						{"Signature", new Signature(Converter.HexToBytes("AF82B348CB859AE93DC7608793BE92FE39713FCA5D1FF558D93EAC23259A2AECD3F0045D3995A7F61C7D3599BD3D8B3F4B77BD2A860D02121603673553470DF0"))},
						{"Fee", new Amount(18370164183782063840)},
						{"Timestamp", new Timestamp(1910972016)},
				}))
			},
			{"SignerPublicKey", new PublicKey(Converter.HexToBytes("A1D1F8779B2BE3CCC9BCF61055347CF5D8EEAD26E68F1B37B703A8A6F529D5C3"))},
			{"Signature", new Signature(Converter.HexToBytes("AF82B348CB859AE93DC7608793BE92FE39713FCA5D1FF558D93EAC23259A2AECD3F0045D3995A7F61C7D3599BD3D8B3F4B77BD2A860D02121603673553470DF0"))},
			{"Fee", new Amount(18370164183782063840)},
			{"Timestamp", new Timestamp(1910972016)},
			{"Cosignatures", System.Array.Empty<CosignatureV1>()},
		};
		var tx = Facade.TransactionFactory.Create(descriptor);
		Assert.AreEqual(payload, Converter.BytesToHex(tx.Serialize()));
	}
}}